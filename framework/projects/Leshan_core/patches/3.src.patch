diff --git a/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/tlv/LwM2mNodeTlvEncoder.java b/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/tlv/LwM2mNodeTlvEncoder.java
index 43ba94d2..229a71f2 100644
--- a/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/tlv/LwM2mNodeTlvEncoder.java
+++ b/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/tlv/LwM2mNodeTlvEncoder.java
@@ -22,6 +22,7 @@ import java.util.Date;
 import java.util.Map.Entry;
 
 import org.eclipse.leshan.core.model.LwM2mModel;
+import org.eclipse.leshan.core.model.ObjectModel;
 import org.eclipse.leshan.core.model.ResourceModel;
 import org.eclipse.leshan.core.model.ResourceModel.Type;
 import org.eclipse.leshan.core.node.LwM2mNode;
@@ -77,6 +78,10 @@ public class LwM2mNodeTlvEncoder {
 
             Tlv[] tlvs;
 
+            ObjectModel objectModel = model.getObjectModel(object.getId());
+            if (objectModel != null && !objectModel.multiple) {
+                tlvs = encodeResources(object.getInstance(0).getResources().values(), new LwM2mPath(object.getId(), 0));
+            } else {
             // encoded as an array of instances
             tlvs = new Tlv[object.getInstances().size()];
             int i = 0;
@@ -85,6 +90,7 @@ public class LwM2mNodeTlvEncoder {
                         new LwM2mPath(object.getId(), instance.getKey()));
                 tlvs[i] = new Tlv(TlvType.OBJECT_INSTANCE, resources, null, instance.getKey());
                 i++;
+               }
             }
 
             try {
@@ -194,4 +200,4 @@ public class LwM2mNodeTlvEncoder {
             }
         }
     }
-}
\ No newline at end of file
+}
