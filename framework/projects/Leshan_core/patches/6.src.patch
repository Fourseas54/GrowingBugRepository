diff --git a/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/tlv/LwM2mNodeTlvDecoder.java b/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/tlv/LwM2mNodeTlvDecoder.java
index c1760178..ef49412b 100644
--- a/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/tlv/LwM2mNodeTlvDecoder.java
+++ b/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/tlv/LwM2mNodeTlvDecoder.java
@@ -102,8 +102,8 @@ public class LwM2mNodeTlvDecoder {
 
             if (tlvs.length == 1 && tlvs[0].getType() == TlvType.OBJECT_INSTANCE) {
                 if (path.isObjectInstance() && tlvs[0].getIdentifier() != path.getObjectInstanceId()) {
-                    throw new CodecException("Id conflict between path [%s] and instance TLV [object instance id=%d]",
-                            path, tlvs[0].getIdentifier());
+                    throw new CodecException("Id conflict between path [%s] and instance TLV [%d]", path,
+                            tlvs[0].getIdentifier());
                 }
                 // object instance TLV
                 return (T) parseObjectInstanceTlv(tlvs[0].getChildren(), path.getObjectId(), tlvs[0].getIdentifier(),
@@ -128,13 +128,6 @@ public class LwM2mNodeTlvDecoder {
         // Resource
         else if (nodeClass == LwM2mResource.class) {
             // The object instance level should not be here, but if it is provided and consistent we tolerate it
-            if (tlvs.length == 1 && tlvs[0].getType() == TlvType.OBJECT_INSTANCE) {
-                if (tlvs[0].getIdentifier() != path.getObjectInstanceId()) {
-                    throw new CodecException("Id conflict between path [%s] and instance TLV [object instance id=%d]",
-                            path, tlvs[0].getIdentifier());
-                }
-                tlvs = tlvs[0].getChildren();
-            }
 
             ResourceModel resourceModel = model.getResourceModel(path.getObjectId(), path.getResourceId());
             if (tlvs.length == 0 && resourceModel != null && !resourceModel.multiple) {
@@ -142,17 +135,13 @@ public class LwM2mNodeTlvDecoder {
                 // else we consider this is a multi-instance resource
                 throw new CodecException("TLV payload is mandatory for single resource %s", path);
             } else if (tlvs.length == 1 && tlvs[0].getType() != TlvType.RESOURCE_INSTANCE) {
-                Tlv tlv = tlvs[0];
-                if (tlv.getType() != TlvType.RESOURCE_VALUE && tlv.getType() != TlvType.MULTIPLE_RESOURCE) {
-                    throw new CodecException(
-                            "Expected TLV of type RESOURCE_VALUE or MUlTIPLE_RESOURCE but was %s [path:%s]",
-                            tlv.getType().name(), path);
-                }
-                if (path.isResource() && path.getResourceId() != tlv.getIdentifier()) {
-                    throw new CodecException("Id conflict between path [%s] and resource TLV [resource id=%s]", path,
-                            tlv.getIdentifier());
+                if (path.isResource() && path.getResourceId() != tlvs[0].getIdentifier()) {
+                    throw new CodecException("Id conflict between path [%s] and resource TLV [%s]", path,
+                            tlvs[0].getIdentifier());
                 }
-                return (T) parseResourceTlv(tlv, path, model);
+                LwM2mPath resourcePath = new LwM2mPath(path.getObjectId(), path.getObjectInstanceId(),
+                        tlvs[0].getIdentifier());
+                return (T) parseResourceTlv(tlvs[0], resourcePath, model);
             } else {
                 Type expectedRscType = getResourceType(path, model);
                 return (T) LwM2mMultipleResource.newResource(path.getResourceId(),
