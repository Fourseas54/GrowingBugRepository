diff --git a/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/senml/LwM2mNodeSenMLDecoder.java b/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/senml/LwM2mNodeSenMLDecoder.java
index 7a7615d0..775ab725 100644
--- a/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/senml/LwM2mNodeSenMLDecoder.java
+++ b/leshan-core/src/main/java/org/eclipse/leshan/core/node/codec/senml/LwM2mNodeSenMLDecoder.java
@@ -215,27 +215,16 @@ public class LwM2mNodeSenMLDecoder implements TimestampedNodeDecoder, MultiNodeD
                 throw new CodecException("Only one instance expected in the payload [path:%s]", path);
 
             // handle empty multi instance resource ?
-            if (recordsByInstanceId.size() == 0) {
-                ResourceModel resourceModel = model.getResourceModel(path.getObjectId(), path.getResourceId());
-                if (resourceModel == null || !resourceModel.multiple) {
-                    throw new CodecException(
-                            "One resource should be present in the payload [path:%s] for single instance resource",
-                            path);
-                }
+            Map<Integer, LwM2mResource> resourcesMap = extractLwM2mResources(
+                    recordsByInstanceId.values().iterator().next(), path, model);
 
-                node = new LwM2mMultipleResource(path.getResourceId(), resourceModel.type);
-            } else {
                 // Extract resources
-                Map<Integer, LwM2mResource> resourcesMap = extractLwM2mResources(
-                        recordsByInstanceId.values().iterator().next(), path, model);
+            if (resourcesMap.size() != 1)
+                throw new CodecException("One resource should be present in the payload [path:%s]", path);
 
                 // validate there is only 1 resource
-                if (resourcesMap.size() != 1)
-                    throw new CodecException("One resource should be present in the payload [path:%s]", path);
-
                 node = resourcesMap.values().iterator().next();
-            }
-        } else if (nodeClass == LwM2mResourceInstance.class) {
+            } else if (nodeClass == LwM2mResourceInstance.class) {
             // validate we have resources for only 1 instance
             if (recordsByInstanceId.size() > 1)
                 throw new CodecException("Only one instance expected in the payload [path:%s]", path);
@@ -535,4 +524,4 @@ public class LwM2mNodeSenMLDecoder implements TimestampedNodeDecoder, MultiNodeD
         // we get the better approximate value, meaning we can get precision loss
         return number.doubleValue();
     }
-}
\ No newline at end of file
+}
diff --git a/leshan-core/src/main/java/org/eclipse/leshan/senml/cbor/upokecenter/SenMLCborUpokecenterEncoderDecoder.java b/leshan-core/src/main/java/org/eclipse/leshan/senml/cbor/upokecenter/SenMLCborUpokecenterEncoderDecoder.java
index 3dfc9553..ab0fea6f 100644
--- a/leshan-core/src/main/java/org/eclipse/leshan/senml/cbor/upokecenter/SenMLCborUpokecenterEncoderDecoder.java
+++ b/leshan-core/src/main/java/org/eclipse/leshan/senml/cbor/upokecenter/SenMLCborUpokecenterEncoderDecoder.java
@@ -72,9 +72,6 @@ public class SenMLCborUpokecenterEncoderDecoder implements SenMLDecoder, SenMLEn
     public SenMLPack fromSenML(byte[] data) throws SenMLException {
         try {
             // handle empty payload
-            if (data.length == 0) {
-                return new SenMLPack();
-            }
 
             CBORObject cborObject = CBORObject.DecodeFromBytes(data);
             if (cborObject.getType() != CBORType.Array) {
diff --git a/leshan-core/src/main/java/org/eclipse/leshan/senml/json/jackson/SenMLJsonJacksonEncoderDecoder.java b/leshan-core/src/main/java/org/eclipse/leshan/senml/json/jackson/SenMLJsonJacksonEncoderDecoder.java
index ba551b93..792470f7 100644
--- a/leshan-core/src/main/java/org/eclipse/leshan/senml/json/jackson/SenMLJsonJacksonEncoderDecoder.java
+++ b/leshan-core/src/main/java/org/eclipse/leshan/senml/json/jackson/SenMLJsonJacksonEncoderDecoder.java
@@ -65,9 +65,6 @@ public class SenMLJsonJacksonEncoderDecoder implements SenMLDecoder, SenMLEncode
     public SenMLPack fromSenML(byte[] jsonString) throws SenMLException {
         try {
             // handle empty payload
-            if (jsonString == null || jsonString.length == 0) {
-                return new SenMLPack();
-            }
 
             JsonNode node = mapper.readTree(jsonString);
             if (!node.isArray()) {
