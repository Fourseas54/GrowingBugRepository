diff --git a/hibernate4/src/test/java/com/fasterxml/jackson/datatype/hibernate4/LazyLoadingTest.java b/hibernate4/src/test/java/com/fasterxml/jackson/datatype/hibernate4/LazyLoadingTest.java
index 0a638db..b45a1f5 100644
--- a/hibernate4/src/test/java/com/fasterxml/jackson/datatype/hibernate4/LazyLoadingTest.java
+++ b/hibernate4/src/test/java/com/fasterxml/jackson/datatype/hibernate4/LazyLoadingTest.java
@@ -6,9 +6,7 @@ import javax.persistence.EntityManager;
 import javax.persistence.EntityManagerFactory;
 import javax.persistence.Persistence;
 
-import com.fasterxml.jackson.core.JsonProcessingException;
 import com.fasterxml.jackson.databind.ObjectMapper;
-import com.fasterxml.jackson.datatype.hibernate4.Hibernate4Module.Feature;
 import com.fasterxml.jackson.datatype.hibernate4.data.Customer;
 import com.fasterxml.jackson.datatype.hibernate4.data.Payment;
 
@@ -56,25 +54,4 @@ public class LazyLoadingTest extends BaseTest
             emf.close();
         }
     }
-    
-    @Test
-    public void testSerializeIdentifierFeature() throws JsonProcessingException {
-		Hibernate4Module module = new Hibernate4Module();
-		module.enable(Feature.SERIALIZE_IDENTIFIER_FOR_LAZY_NOT_LOADED_OBJECTS);
-		ObjectMapper objectMapper = new ObjectMapper().registerModule(module);
-
-		EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistenceUnit");
-    	try {
-    		EntityManager em = emf.createEntityManager();
-    		Customer customerRef = em.getReference(Customer.class, 103);
-    		em.close();
-    		assertFalse(Hibernate.isInitialized(customerRef));
-    		
-			String json = objectMapper.writeValueAsString(customerRef);
-			assertFalse(Hibernate.isInitialized(customerRef));
-			assertEquals("{\"customerNumber\":103}", json);
-    	} finally {
-    		emf.close();
-    	}
-    }
 }
