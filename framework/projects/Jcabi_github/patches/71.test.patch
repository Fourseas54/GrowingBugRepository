diff --git a/src/test/java/com/jcabi/github/mock/MkStorageTest.java b/src/test/java/com/jcabi/github/mock/MkStorageTest.java
index 1895d4d1..f37a6c79 100644
--- a/src/test/java/com/jcabi/github/mock/MkStorageTest.java
+++ b/src/test/java/com/jcabi/github/mock/MkStorageTest.java
@@ -30,7 +30,6 @@
 package com.jcabi.github.mock;
 
 import java.io.IOException;
-import java.util.ConcurrentModificationException;
 import java.util.concurrent.ExecutorService;
 import java.util.concurrent.Executors;
 import java.util.concurrent.Future;
@@ -38,7 +37,6 @@ import java.util.concurrent.TimeUnit;
 import java.util.concurrent.TimeoutException;
 import org.hamcrest.MatcherAssert;
 import org.hamcrest.Matchers;
-import org.junit.Ignore;
 import org.junit.Test;
 import org.xembly.Directives;
 
@@ -57,18 +55,13 @@ public final class MkStorageTest {
     @Test
     public void readsAndWrites() throws Exception {
         final MkStorage storage = new MkStorage.InFile();
-        storage.lock();
-        try {
-            storage.apply(
-                new Directives().xpath("/github").add("test").set("hello, world")
-            );
-            MatcherAssert.assertThat(
-                storage.xml().xpath("/github/test/text()").get(0),
-                Matchers.endsWith(", world")
-            );
-        } finally {
-            storage.unlock();
-        }
+        storage.apply(
+            new Directives().xpath("/github").add("test").set("hello, world")
+        );
+        MatcherAssert.assertThat(
+            storage.xml().xpath("/github/test/text()").get(0),
+            Matchers.endsWith(", world")
+        );
     }
 
     /**
@@ -109,24 +102,4 @@ public final class MkStorageTest {
         executor.shutdown();
     }
 
-    /**
-     * MkStorage should require lock on document reading.
-     * @throws Exception If some problem inside
-     */
-    @Test(expected = ConcurrentModificationException.class)
-    public void xmlRequiresLock() throws Exception {
-        new MkStorage.InFile().xml();
-    }
-
-    /**
-     * MkStorage should require lock on document change.
-     * @throws Exception If some problem inside
-     */
-    @Test(expected = ConcurrentModificationException.class)
-    public void applyRequiresLock() throws Exception {
-        new MkStorage.InFile().apply(
-            new Directives().xpath("/github").add("test").set("hello, world")
-        );
-    }
-
-}
\ No newline at end of file
+}
