diff --git a/src/main/java/com/jcabi/github/mock/MkContent.java b/src/main/java/com/jcabi/github/mock/MkContent.java
index 8a9d5446..50ac3f32 100644
--- a/src/main/java/com/jcabi/github/mock/MkContent.java
+++ b/src/main/java/com/jcabi/github/mock/MkContent.java
@@ -84,6 +84,14 @@ final class MkContent implements Content {
      * Branch of this content.
      */
     private final transient String branch;
+    public MkContent(
+        @NotNull(message = "stg can't be NULL") final MkStorage stg,
+        @NotNull(message = "login can't be NULL") final String login,
+        @NotNull(message = "rep can't be NULL") final Coordinates rep,
+        @NotNull(message = "path can't be NULL") final String path
+    ) throws IOException {
+        this(stg, login, rep, path, "master");
+    }
 
     /**
      * Public ctor.
diff --git a/src/main/java/com/jcabi/github/mock/MkContents.java b/src/main/java/com/jcabi/github/mock/MkContents.java
index 919a7ffb..e4fbd270 100644
--- a/src/main/java/com/jcabi/github/mock/MkContents.java
+++ b/src/main/java/com/jcabi/github/mock/MkContents.java
@@ -106,7 +106,7 @@ final class MkContents implements Contents {
     public Content readme() throws IOException {
         // @checkstyle MultipleStringLiterals (2 lines)
         return new MkContent(
-            this.storage, this.self, this.coords, "README.md", "master"
+            this.storage, this.self, this.coords, "README.md"
         );
     }
 
@@ -150,7 +150,7 @@ final class MkContents implements Contents {
             this.storage.unlock();
         }
         return new MkContent(
-            this.storage, this.self, this.coords, json.getString("path"), branch
+            this.storage, this.self, this.coords, json.getString("path")
         );
     }
 
