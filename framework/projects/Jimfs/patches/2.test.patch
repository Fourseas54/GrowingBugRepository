diff --git a/jimfs/src/test/java/com/google/common/jimfs/JimfsUnixLikeFileSystemTest.java b/jimfs/src/test/java/com/google/common/jimfs/JimfsUnixLikeFileSystemTest.java
index 625353c..8ab4e39 100644
--- a/jimfs/src/test/java/com/google/common/jimfs/JimfsUnixLikeFileSystemTest.java
+++ b/jimfs/src/test/java/com/google/common/jimfs/JimfsUnixLikeFileSystemTest.java
@@ -51,6 +51,11 @@ import com.google.common.io.ByteStreams;
 import com.google.common.io.CharStreams;
 import com.google.common.primitives.Bytes;
 import com.google.common.util.concurrent.Uninterruptibles;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+import org.junit.runners.JUnit4;
+
 import java.io.ByteArrayInputStream;
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
@@ -91,9 +96,6 @@ import java.util.Arrays;
 import java.util.Iterator;
 import java.util.Set;
 import java.util.regex.PatternSyntaxException;
-import org.junit.Test;
-import org.junit.runner.RunWith;
-import org.junit.runners.JUnit4;
 
 /**
  * Tests an in-memory file system through the public APIs in {@link Files}, etc. This also acts as
@@ -1382,20 +1384,6 @@ public class JimfsUnixLikeFileSystemTest extends AbstractJimfsIntegrationTest {
     }
   }
 
-  @Test
-  public void testOutputStream_withTruncateExistingAndNotWrite_truncatesFile() throws IOException {
-    // https://github.com/google/jimfs/pull/77
-    Path path = path("/test");
-    Files.write(path, new byte[] {1, 2, 3});
-    assertThatPath(path).containsBytes(1, 2, 3);
-
-    try (OutputStream out = Files.newOutputStream(path, CREATE, TRUNCATE_EXISTING)) {
-      out.write(new byte[] {1, 2});
-    }
-
-    assertThatPath(path).containsBytes(1, 2);
-  }
-
   @Test
   public void testChannels() throws IOException {
     try (FileChannel channel = FileChannel.open(path("/test.txt"), CREATE_NEW, WRITE)) {
