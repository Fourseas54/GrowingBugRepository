diff --git a/CHANGELOG.md b/CHANGELOG.md
index 6cf7f51..ae3845f 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -6,10 +6,6 @@ and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0
 
 ## [Unreleased]
 
-### Fixed
-- Adjustment to OSGB36 datum transform e.g. EPSG: 27700
-- +nadgrids=@null support e.g. EPSG: 3857
-
 ## [1.1.3] - 2021-06-17
 
 ### Fixed
diff --git a/src/main/java/org/locationtech/proj4j/Registry.java b/src/main/java/org/locationtech/proj4j/Registry.java
index 258680c..ee19775 100755
--- a/src/main/java/org/locationtech/proj4j/Registry.java
+++ b/src/main/java/org/locationtech/proj4j/Registry.java
@@ -47,7 +47,7 @@ public class Registry {
             Datum.HERMANNSKOGEL,
             Datum.IRE65,
             Datum.NZGD49,
-            Datum.OSGB36
+            Datum.OSEB36
     };
 
     public Datum getDatum(String code) {
diff --git a/src/main/java/org/locationtech/proj4j/datum/Datum.java b/src/main/java/org/locationtech/proj4j/datum/Datum.java
index 36f1405..91a090e 100755
--- a/src/main/java/org/locationtech/proj4j/datum/Datum.java
+++ b/src/main/java/org/locationtech/proj4j/datum/Datum.java
@@ -72,7 +72,7 @@ public class Datum implements java.io.Serializable {
     public static final Datum HERMANNSKOGEL = new Datum("hermannskogel", 577.326, 90.129, 463.919, 5.137, 1.474, 5.297, 2.4232, Ellipsoid.BESSEL, "Hermannskogel");
     public static final Datum IRE65 = new Datum("ire65", 482.530, -130.596, 564.557, -1.042, -0.214, -0.631, 8.15, Ellipsoid.MOD_AIRY, "Ireland 1965");
     public static final Datum NZGD49 = new Datum("nzgd49", 59.47, -5.04, 187.44, 0.47, -0.1, 1.024, -4.5993, Ellipsoid.INTERNATIONAL, "New Zealand Geodetic Datum 1949");
-    public static final Datum OSGB36 = new Datum("OSGB36", 446.448, -125.157, 542.06, 0.15, 0.247, 0.842, -20.489, Ellipsoid.AIRY, "Airy 1830");
+    public static final Datum OSEB36 = new Datum("OSGB36", 446.448, -125.157, 542.060, 0.1502, 0.2470, 0.8421, -20.4894, Ellipsoid.AIRY, "Airy 1830");
 
     static {
         Datum temp = new Datum("NAD27", new ArrayList<Grid>(), Ellipsoid.CLARKE_1866, "North_American_Datum_1927");
diff --git a/src/main/java/org/locationtech/proj4j/datum/Grid.java b/src/main/java/org/locationtech/proj4j/datum/Grid.java
index 71a5aa5..b340b92 100755
--- a/src/main/java/org/locationtech/proj4j/datum/Grid.java
+++ b/src/main/java/org/locationtech/proj4j/datum/Grid.java
@@ -314,7 +314,6 @@ public final class Grid implements Serializable {
             for (String gridName : grids.split(",")) {
                 boolean optional = gridName.startsWith("@");
                 if (optional) gridName = gridName.substring(1);
-                if (gridName.equals("null")) return null;
                 try {
                     mergeGridFile(gridName, gridlist);
                 } catch (IOException e) {
diff --git a/src/test/java/org/locationtech/proj4j/CoordinateTransformTest.java b/src/test/java/org/locationtech/proj4j/CoordinateTransformTest.java
index 04f1387..c3f4151 100755
--- a/src/test/java/org/locationtech/proj4j/CoordinateTransformTest.java
+++ b/src/test/java/org/locationtech/proj4j/CoordinateTransformTest.java
@@ -215,12 +215,6 @@ public class CoordinateTransformTest extends BaseCoordinateTransformTest {
         checkTransformFromGeo("EPSG:2736", 34.0, -21.0, 603934.39, 7677664.39, 0.1);
         checkTransformFromGeo("EPSG:26916", -86.6056, 34.579, 536173.11, 3826428.04, 0.1);
         checkTransformFromGeo("EPSG:21781", 8.23, 46.82, 660309.34, 185586.30, 0.1);
-        checkTransformFromWGS84("EPSG:27700", -8.82, 49.79, -90619.28789678006, 10097.131147458786, 0.0);
-        checkTransformToWGS84("EPSG:27700", 612435.55, 1234954.16, 1.9200000236235546, 60.93999999543101, 0.0);
-        checkTransformToWGS84("EPSG:27700", 327420.988668, 690284.547110, -3.1683134533969364, 56.0998025292667, 0.0);
-        checkTransformFromWGS84("EPSG:3857", -3.1683134533969364, 56.0998025292667, -352695.04030562507, 7578309.225014557, 0.0);
-        // TODO https://github.com/locationtech/proj4j/issues/32
-        //checkTransform("EPSG:27700", 327420.988668, 690284.547110, "EPSG:3857", -352695.04030562507, 7578309.225014557, 0.0);
     }
 
     @Test
diff --git a/src/test/java/org/locationtech/proj4j/ExampleTest.java b/src/test/java/org/locationtech/proj4j/ExampleTest.java
index bc20430..834946c 100755
--- a/src/test/java/org/locationtech/proj4j/ExampleTest.java
+++ b/src/test/java/org/locationtech/proj4j/ExampleTest.java
@@ -17,11 +17,9 @@ package org.locationtech.proj4j;
 
 import org.junit.Assert;
 import org.junit.Test;
-import org.locationtech.proj4j.datum.Datum;
 
 import java.io.IOException;
 
-import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertTrue;
 
 
@@ -223,15 +221,12 @@ public class ExampleTest {
     @Test
     public void epsgWebMercatorLegacyTest() {
         CRSFactory csFactory = new CRSFactory();
-        String parameters = "+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs";
         try {
-            String code = csFactory.readEpsgFromParameters(parameters);
+            String code = csFactory.readEpsgFromParameters("+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs");
             Assert.assertEquals(Integer.parseInt(code), 3857);
         } catch (IOException e) {
             e.printStackTrace();
         }
-        CoordinateReferenceSystem crs = csFactory.createFromParameters("EPSG:3857", parameters);
-        assertTrue(crs.getDatum().getTransformType() != Datum.TYPE_GRIDSHIFT);
     }
 
     private boolean isInTolerance(ProjCoordinate p, double x, double y, double tolerance) {
